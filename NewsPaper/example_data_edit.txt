from news.models import *

1)Создать двух пользователей (с помощью метода User.objects.create_user('username')).
u1=User.objects.create_user('User1')
u2=User.objects.create_user('User2')

2)Создать два объекта модели Author, связанные с пользователями.
a1=Author.objects.create(author=u1)
a2=Author.objects.create(author=u2)

3)Добавить 4 категории в модель Category.
Category.objects.create(category="IT")
Category.objects.create(category="Game")
Category.objects.create(category="AI")
Category.objects.create(category="Music")

4)Добавить 2 статьи и 1 новость.
Post.objects.create(author=a1, post_type="ar", title="New age for AI", text="first example text for post")
Post.objects.create(author=a1, post_type="ar", title="Python courses", text="second example text for post2")
Post.objects.create(author=a2, post_type="nw", title="New album from band 'Antreib'", text="third example text for new")

5)Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=1).category.add(Category.objects.get(id=1))
Post.objects.get(id=1).category.add(Category.objects.get(id=3))
Post.objects.get(id=2).category.add(Category.objects.get(id=1))
Post.objects.get(id=3).category.add(Category.objects.get(id=4))

6)Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(post=Post.objects.get(id=1), com_author=Author.objects.get(id=2).author, text="Not bad for AI...")
Comment.objects.create(post=Post.objects.get(id=1), com_author=Author.objects.get(id=1).author, text="Future by there AI")
Comment.objects.create(post=Post.objects.get(id=2), com_author=Author.objects.get(id=2).author, text="Python is easy")
Comment.objects.create(post=Post.objects.get(id=3), com_author=Author.objects.get(id=1).author, text="Ooo, my favorite band")

7)Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(id=1).like()       x3
Post.objects.get(id=2).like()
Post.objects.get(id=3).like()

Comment.objects.get(id=1).like()        x2
Comment.objects.get(id=2).dislike()     x2

8)Обновить рейтинги пользователей.
Author.objects.get(id=1).update_rating()
Author.objects.get(id=2).update_rating()

9)Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
rating_list = Author.objects.order_by('-rating')[:1]

for i in rating_list:
    f"Пользователь: {i.author}"
    f"Рейтинг: {i.rating}"

10)Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
top_post = Post.objects.order_by("-post_rating")[:1]

for i in top_post:
    f"Дата добавления: {i.post_data_time}"
    f"Автор поста: {i.author.author}"
    f"Рейтинг: {i.post_rating}"
    f"Заголовок: {i.title}"
    i.previev()

11)Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
top_post_com = Comment.objects.filter(post=top_post)

for i in top_post_com:
    f"Дата добавления: {i.com_data_time}"
    f"Автор комментария: {i.com_author}"
    f"Рейтинг: {i.com_rating}"
    f"Текст: {i.text}"
    f"{'-'*40}"
